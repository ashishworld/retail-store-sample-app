name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-west-2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push all services
        run: |
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          IMAGE_TAG=${GITHUB_SHA:0:7}
          
          # Services to build
          SERVICES=("ui" "catalog" "cart" "orders" "checkout")
          
          for SERVICE in "${SERVICES[@]}"; do
            echo "Building $SERVICE..."
            
            # Create ECR repository if it doesn't exist
            aws ecr describe-repositories --repository-names retail-store-$SERVICE 2>/dev/null || \
            aws ecr create-repository --repository-name retail-store-$SERVICE
            
            # Build and push Docker image
            cd src/$SERVICE
            docker build -t $ECR_REGISTRY/retail-store-$SERVICE:$IMAGE_TAG .
            docker push $ECR_REGISTRY/retail-store-$SERVICE:$IMAGE_TAG
            
            # Update Helm chart values
            sed -i "s|repository: .*|repository: $ECR_REGISTRY/retail-store-$SERVICE|g" chart/values.yaml
            sed -i "s|tag: \".*\"|tag: \"$IMAGE_TAG\"|g" chart/values.yaml
            
            cd ../..
          done

      - name: Commit and push updated charts
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/*/chart/values.yaml
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update all service image tags to ${GITHUB_SHA:0:7}"
            git push
          fi

      - name: Deploy to ArgoCD (Optional)
        run: |
          echo "Images built and pushed successfully!"
          echo "ArgoCD will automatically sync the changes."